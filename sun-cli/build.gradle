group 'Tron'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.options*.compilerArgs = [
        "-Xlint:serial", "-Xlint:varargs", "-Xlint:classfile", "-Xlint:dep-ann",
        "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally", "-Xlint:overrides",
        "-Xlint:path", "-Xlint:static", "-Xlint:try", "-Xlint:fallthrough",
        "-Xlint:deprecation", "-Xlint:unchecked", "-Xlint:-options"
]

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }

}
buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
        }
        mavenCentral()
    }
    ext {
        projectVersion = '1.3.0-RELEASE'
        grpcVersion = '1.6.1'
        protobufVersion = '3.3.0'
        protobufGradlePluginVersion = '0.8.0'
        springCloudConsulVersion = '1.2.1.RELEASE'
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath "gradle.plugin.com.liferay:gradle-plugins-node:4.3.0"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

dependencies {
    compile project(':sun-sdk')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

run {
    standardInput = System.in
    mainClassName = 'org.tron.walletcli.Client'
}

jar {
    from(sourceSets.main.output) {
        include "/**"
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'org.tron.walletcli.Client'
    }
}

shadowJar {
    baseName = 'sun-cli'
    classifier = null
    version = null
}
